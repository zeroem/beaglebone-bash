#!/bin/bash -e

function help_text() {
  cat <<HELP
Manage GPIO pins on the BeagleBone Black

Available subcommands are:
  export
  unexport
HELP
}

function gpio_pin_path() {
  printf "%s/gpio%d\n" "${GPIO_PIN_PATH_PREFIX:-/sys/class/gpio}" "${1:?Pin number is a required argument}"
}

export -f gpio_pin_path

function debug() {
  if [ -n "$debug" ]; then
    printf "%s\n" "$*" >&2
  fi
}

export -f debug

function gpio_pin() {
  local -r header="$1"
  local -r -i pin="$2"
  local -r header_dir="$base_dir"/pins/"$header"
  local -r pin_dir="$header_dir"/"$pin"

  debug "header_dir: $header_dir"
  debug "pin_dir: $pin_dir"

  if [ ! -d  "$header_dir" ]; then
    printf "'%s' is not a valid header.\n" "$header" >&2
    exit 1
  fi

  if [ ! -d "$pin_dir" ]; then
    printf "'%d' is not a valid pin on header '%s'" "$pin" "$header" >&2
    exit 1
  fi

  if [ ! -f "$pin_dir"/gpio ]; then
    printf "%s %d is not a GPIO pin\n" "$header" "$pin" >&2
    printf "fail"
    exit 1
  fi

  cat "$pin_dir"/gpio
}

export -f gpio_pin

function main() {
  local -x -r base_dir="$(cd "$(dirname "$0")"/..; pwd)"
  local -x -r export_path="${GPIO_EXPORT_PATH:-/sys/class/gpio/export}"
  local -x -r unexport_path="${GPIO_UNEXPORT_PATH:-/sys/class/gpio/unexport}"

  local -r subcommand="${base_dir}/bin/gpio-${1}"

  if [ -x "$subcommand" ]; then
    "$subcommand" "${@:2}"
  fi
}

main $@
